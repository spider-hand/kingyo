/* tslint:disable */
/* eslint-disable */
/**
 * Testplan API
 * API for managing test plans and related resources.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TestCaseStatusEnum } from './TestCaseStatusEnum';
import {
    TestCaseStatusEnumFromJSON,
    TestCaseStatusEnumFromJSONTyped,
    TestCaseStatusEnumToJSON,
} from './TestCaseStatusEnum';

/**
 * 
 * @export
 * @interface PatchedTestCase
 */
export interface PatchedTestCase {
    /**
     * 
     * @type {number}
     * @memberof PatchedTestCase
     */
    readonly id?: number;
    /**
     * 
     * @type {Date}
     * @memberof PatchedTestCase
     */
    readonly executedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof PatchedTestCase
     */
    readonly latestResult?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedTestCase
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedTestCase
     */
    description?: string;
    /**
     * 
     * @type {TestCaseStatusEnum}
     * @memberof PatchedTestCase
     */
    status?: TestCaseStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof PatchedTestCase
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PatchedTestCase
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof PatchedTestCase
     */
    plan?: number;
}



/**
 * Check if a given object implements the PatchedTestCase interface.
 */
export function instanceOfPatchedTestCase(value: object): value is PatchedTestCase {
    return true;
}

export function PatchedTestCaseFromJSON(json: any): PatchedTestCase {
    return PatchedTestCaseFromJSONTyped(json, false);
}

export function PatchedTestCaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedTestCase {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'executedAt': json['executed_at'] == null ? undefined : (new Date(json['executed_at'])),
        'latestResult': json['latest_result'] == null ? undefined : json['latest_result'],
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'status': json['status'] == null ? undefined : TestCaseStatusEnumFromJSON(json['status']),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'plan': json['plan'] == null ? undefined : json['plan'],
    };
}

export function PatchedTestCaseToJSON(value?: Omit<PatchedTestCase, 'id'|'executed_at'|'latest_result'|'created_at'|'updated_at'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'title': value['title'],
        'description': value['description'],
        'status': TestCaseStatusEnumToJSON(value['status']),
        'plan': value['plan'],
    };
}

