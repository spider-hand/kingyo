/* tslint:disable */
/* eslint-disable */
/**
 * Testplan API
 * API for managing test plans and related resources.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StatusEnum } from './StatusEnum';
import {
    StatusEnumFromJSON,
    StatusEnumFromJSONTyped,
    StatusEnumToJSON,
} from './StatusEnum';

/**
 * 
 * @export
 * @interface TestPlan
 */
export interface TestPlan {
    /**
     * 
     * @type {number}
     * @memberof TestPlan
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof TestPlan
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof TestPlan
     */
    description?: string;
    /**
     * 
     * @type {StatusEnum}
     * @memberof TestPlan
     */
    status?: StatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof TestPlan
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof TestPlan
     */
    readonly updatedAt: Date;
}



/**
 * Check if a given object implements the TestPlan interface.
 */
export function instanceOfTestPlan(value: object): value is TestPlan {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function TestPlanFromJSON(json: any): TestPlan {
    return TestPlanFromJSONTyped(json, false);
}

export function TestPlanFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestPlan {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'status': json['status'] == null ? undefined : StatusEnumFromJSON(json['status']),
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function TestPlanToJSON(value?: Omit<TestPlan, 'id'|'created_at'|'updated_at'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'title': value['title'],
        'description': value['description'],
        'status': StatusEnumToJSON(value['status']),
    };
}

