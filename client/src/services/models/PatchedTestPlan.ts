/* tslint:disable */
/* eslint-disable */
/**
 * Testplan API
 * API for managing test plans and related resources.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StatusEnum } from './StatusEnum';
import {
    StatusEnumFromJSON,
    StatusEnumFromJSONTyped,
    StatusEnumToJSON,
} from './StatusEnum';

/**
 * 
 * @export
 * @interface PatchedTestPlan
 */
export interface PatchedTestPlan {
    /**
     * 
     * @type {number}
     * @memberof PatchedTestPlan
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof PatchedTestPlan
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedTestPlan
     */
    description?: string;
    /**
     * 
     * @type {StatusEnum}
     * @memberof PatchedTestPlan
     */
    status?: StatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof PatchedTestPlan
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PatchedTestPlan
     */
    readonly updatedAt?: Date;
}



/**
 * Check if a given object implements the PatchedTestPlan interface.
 */
export function instanceOfPatchedTestPlan(value: object): value is PatchedTestPlan {
    return true;
}

export function PatchedTestPlanFromJSON(json: any): PatchedTestPlan {
    return PatchedTestPlanFromJSONTyped(json, false);
}

export function PatchedTestPlanFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedTestPlan {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'status': json['status'] == null ? undefined : StatusEnumFromJSON(json['status']),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
    };
}

export function PatchedTestPlanToJSON(value?: Omit<PatchedTestPlan, 'id'|'created_at'|'updated_at'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'description': value['description'],
        'status': StatusEnumToJSON(value['status']),
    };
}

