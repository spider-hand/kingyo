/* tslint:disable */
/* eslint-disable */
/**
 * Testplan API
 * API for managing test plans and related resources.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OsEnum } from './OsEnum';
import {
    OsEnumFromJSON,
    OsEnumFromJSONTyped,
    OsEnumToJSON,
} from './OsEnum';
import type { BrowserEnum } from './BrowserEnum';
import {
    BrowserEnumFromJSON,
    BrowserEnumFromJSONTyped,
    BrowserEnumToJSON,
} from './BrowserEnum';
import type { ResultEnum } from './ResultEnum';
import {
    ResultEnumFromJSON,
    ResultEnumFromJSONTyped,
    ResultEnumToJSON,
} from './ResultEnum';

/**
 * 
 * @export
 * @interface TestResultCreate
 */
export interface TestResultCreate {
    /**
     * 
     * @type {number}
     * @memberof TestResultCreate
     */
    readonly id: number;
    /**
     * 
     * @type {number}
     * @memberof TestResultCreate
     */
    _case: number;
    /**
     * 
     * @type {ResultEnum}
     * @memberof TestResultCreate
     */
    result?: ResultEnum;
    /**
     * 
     * @type {BrowserEnum}
     * @memberof TestResultCreate
     */
    browser?: BrowserEnum;
    /**
     * 
     * @type {OsEnum}
     * @memberof TestResultCreate
     */
    os?: OsEnum;
    /**
     * 
     * @type {number}
     * @memberof TestResultCreate
     */
    tester: number;
}



/**
 * Check if a given object implements the TestResultCreate interface.
 */
export function instanceOfTestResultCreate(value: object): value is TestResultCreate {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('_case' in value) || value['_case'] === undefined) return false;
    if (!('tester' in value) || value['tester'] === undefined) return false;
    return true;
}

export function TestResultCreateFromJSON(json: any): TestResultCreate {
    return TestResultCreateFromJSONTyped(json, false);
}

export function TestResultCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestResultCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        '_case': json['case'],
        'result': json['result'] == null ? undefined : ResultEnumFromJSON(json['result']),
        'browser': json['browser'] == null ? undefined : BrowserEnumFromJSON(json['browser']),
        'os': json['os'] == null ? undefined : OsEnumFromJSON(json['os']),
        'tester': json['tester'],
    };
}

export function TestResultCreateToJSON(value?: Omit<TestResultCreate, 'id'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'case': value['_case'],
        'result': ResultEnumToJSON(value['result']),
        'browser': BrowserEnumToJSON(value['browser']),
        'os': OsEnumToJSON(value['os']),
        'tester': value['tester'],
    };
}

