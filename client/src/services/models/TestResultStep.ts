/* tslint:disable */
/* eslint-disable */
/**
 * Testplan API
 * API for managing test plans and related resources.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TestResultStepStatusEnum } from './TestResultStepStatusEnum';
import {
    TestResultStepStatusEnumFromJSON,
    TestResultStepStatusEnumFromJSONTyped,
    TestResultStepStatusEnumToJSON,
} from './TestResultStepStatusEnum';

/**
 * 
 * @export
 * @interface TestResultStep
 */
export interface TestResultStep {
    /**
     * 
     * @type {number}
     * @memberof TestResultStep
     */
    readonly id: number;
    /**
     * 
     * @type {number}
     * @memberof TestResultStep
     */
    result: number;
    /**
     * 
     * @type {number}
     * @memberof TestResultStep
     */
    step?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TestResultStep
     */
    order: number;
    /**
     * 
     * @type {string}
     * @memberof TestResultStep
     */
    action?: string;
    /**
     * 
     * @type {string}
     * @memberof TestResultStep
     */
    expectedResult?: string;
    /**
     * 
     * @type {TestResultStepStatusEnum}
     * @memberof TestResultStep
     */
    status?: TestResultStepStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof TestResultStep
     */
    comment?: string;
}



/**
 * Check if a given object implements the TestResultStep interface.
 */
export function instanceOfTestResultStep(value: object): value is TestResultStep {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('result' in value) || value['result'] === undefined) return false;
    if (!('order' in value) || value['order'] === undefined) return false;
    return true;
}

export function TestResultStepFromJSON(json: any): TestResultStep {
    return TestResultStepFromJSONTyped(json, false);
}

export function TestResultStepFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestResultStep {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'result': json['result'],
        'step': json['step'] == null ? undefined : json['step'],
        'order': json['order'],
        'action': json['action'] == null ? undefined : json['action'],
        'expectedResult': json['expected_result'] == null ? undefined : json['expected_result'],
        'status': json['status'] == null ? undefined : TestResultStepStatusEnumFromJSON(json['status']),
        'comment': json['comment'] == null ? undefined : json['comment'],
    };
}

export function TestResultStepToJSON(value?: Omit<TestResultStep, 'id'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'result': value['result'],
        'step': value['step'],
        'order': value['order'],
        'action': value['action'],
        'expected_result': value['expectedResult'],
        'status': TestResultStepStatusEnumToJSON(value['status']),
        'comment': value['comment'],
    };
}

