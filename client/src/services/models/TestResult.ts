/* tslint:disable */
/* eslint-disable */
/**
 * Testplan API
 * API for managing test plans and related resources.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResultEnum } from './ResultEnum';
import {
    ResultEnumFromJSON,
    ResultEnumFromJSONTyped,
    ResultEnumToJSON,
} from './ResultEnum';

/**
 * 
 * @export
 * @interface TestResult
 */
export interface TestResult {
    /**
     * 
     * @type {number}
     * @memberof TestResult
     */
    readonly id: number;
    /**
     * 
     * @type {number}
     * @memberof TestResult
     */
    _case: number;
    /**
     * 
     * @type {string}
     * @memberof TestResult
     */
    readonly caseTitle: string;
    /**
     * 
     * @type {ResultEnum}
     * @memberof TestResult
     */
    result?: ResultEnum;
    /**
     * 
     * @type {string}
     * @memberof TestResult
     */
    readonly _configuration: string;
    /**
     * 
     * @type {number}
     * @memberof TestResult
     */
    tester: number;
    /**
     * 
     * @type {string}
     * @memberof TestResult
     */
    readonly testerUsername: string;
    /**
     * 
     * @type {Date}
     * @memberof TestResult
     */
    readonly executedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof TestResult
     */
    readonly updatedAt: Date;
}



/**
 * Check if a given object implements the TestResult interface.
 */
export function instanceOfTestResult(value: object): value is TestResult {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('_case' in value) || value['_case'] === undefined) return false;
    if (!('caseTitle' in value) || value['caseTitle'] === undefined) return false;
    if (!('_configuration' in value) || value['_configuration'] === undefined) return false;
    if (!('tester' in value) || value['tester'] === undefined) return false;
    if (!('testerUsername' in value) || value['testerUsername'] === undefined) return false;
    if (!('executedAt' in value) || value['executedAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function TestResultFromJSON(json: any): TestResult {
    return TestResultFromJSONTyped(json, false);
}

export function TestResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestResult {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        '_case': json['case'],
        'caseTitle': json['case_title'],
        'result': json['result'] == null ? undefined : ResultEnumFromJSON(json['result']),
        '_configuration': json['configuration'],
        'tester': json['tester'],
        'testerUsername': json['tester_username'],
        'executedAt': (new Date(json['executed_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function TestResultToJSON(value?: Omit<TestResult, 'id'|'case_title'|'configuration'|'tester_username'|'executed_at'|'updated_at'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'case': value['_case'],
        'result': ResultEnumToJSON(value['result']),
        'tester': value['tester'],
    };
}

