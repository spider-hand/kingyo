openapi: 3.0.3
info:
  title: Testplan API
  version: 1.0.0
  description: API for managing test plans and related resources.
paths:
  /api/v1/testplans/:
    get:
      operationId: listTestplans
      parameters:
      - in: query
        name: name
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - completed
          - in_progress
          - not_started
        description: |-
          * `not_started` - Not Started
          * `in_progress` - In Progress
          * `completed` - Completed
      tags:
      - testplans
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTestPlanList'
          description: ''
  /api/v1/testplans/{id}/:
    get:
      operationId: retrieveTestplans
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this test plan.
        required: true
      tags:
      - testplans
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlan'
          description: ''
components:
  schemas:
    PaginatedTestPlanList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TestPlan'
    StatusEnum:
      enum:
      - not_started
      - in_progress
      - completed
      type: string
      description: |-
        * `not_started` - Not Started
        * `in_progress` - In Progress
        * `completed` - Completed
    TestPlan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
